{"version":3,"file":"vue-types.min.js","sources":["../node_modules/lodash.isplainobject/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","import isPlainObject from 'lodash.isplainobject'\n\nconst ObjProto = Object.prototype\nconst toString = ObjProto.toString\nexport const hasOwn = ObjProto.hasOwnProperty\n\nconst FN_MATCH_REGEXP = /^\\s*function (\\w+)/\n\n// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L177\nexport const getType = (fn) => {\n  const type = (fn !== null && fn !== undefined) ? (fn.type ? fn.type : fn) : null\n  const match = type && type.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\nexport const getNativeType = (value) => {\n  if (value === null || value === undefined) return null\n  const match = value.constructor.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\n/**\n * No-op function\n */\nexport const noop = () => {}\n\n/**\n * Checks for a own property in an object\n *\n * @param {object} obj - Object\n * @param {string} prop - Property to check\n */\nexport const has = (obj, prop) => hasOwn.call(obj, prop)\n\n/**\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @param {*} value - The value to be tested for being an integer.\n * @returns {boolean}\n */\nexport const isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n}\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to be tested for being an array.\n * @returns {boolean}\n */\nexport const isArray = Array.isArray || function(value) {\n  return toString.call(value) === '[object Array]'\n}\n\n/**\n * Checks if a value is a function\n *\n * @param {any} value - Value to check\n * @returns {boolean}\n */\nexport const isFunction = (value) => toString.call(value) === '[object Function]'\n\n/**\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\n *\n * @param {object} type - Object to enhance\n */\nexport const withDefault = function (type) {\n  Object.defineProperty(type, 'def', {\n    value(def) {\n      if (def === undefined && !this.default) {\n        return this\n      }\n      if (!isFunction(def) && !validateType(this, def)) {\n        warn(`${this._vueTypes_name} - invalid default value: \"${def}\"`, def)\n        return this\n      }\n      this.default = (isArray(def) || isPlainObject(def)) ? function () {\n        return def\n      } : def\n      return this\n    },\n    enumerable: false,\n    writable: false\n  })\n}\n\n/**\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\n *\n * @param {object} type - Object to enhance\n */\nexport const withRequired = function (type) {\n  Object.defineProperty(type, 'isRequired', {\n    get() {\n      this.required = true\n      return this\n    },\n    enumerable: false\n  })\n}\n\n/**\n * Adds `isRequired` and `def` modifiers to an object\n *\n * @param {string} name - Type internal name\n * @param {object} obj - Object to enhance\n * @returns {object}\n */\nexport const toType = (name, obj) => {\n  Object.defineProperty(obj, '_vueTypes_name', {\n    enumerable: false,\n    writable: false,\n    value: name\n  })\n  withRequired(obj)\n  withDefault(obj)\n\n  if (isFunction(obj.validator)) {\n    obj.validator = obj.validator.bind(obj)\n  }\n  return obj\n}\n\n/**\n * Validates a given value against a prop type object\n *\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\n * @param {*} value - Value to check\n * @param {boolean} silent - Silence warnings\n * @returns {boolean}\n */\nexport const validateType = (type, value, silent = false) => {\n  let typeToCheck = type\n  let valid = true\n  let expectedType\n  if (!isPlainObject(type)) {\n    typeToCheck = { type }\n  }\n  const namePrefix = typeToCheck._vueTypes_name ? (typeToCheck._vueTypes_name + ' - ') : ''\n\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\n    if (isArray(typeToCheck.type)) {\n      valid = typeToCheck.type.some((type) => validateType(type, value, true))\n      expectedType = typeToCheck.type.map((type) => getType(type)).join(' or ')\n    } else {\n      expectedType = getType(typeToCheck)\n\n      if (expectedType === 'Array') {\n        valid = isArray(value)\n      } else if (expectedType === 'Object') {\n        valid = isPlainObject(value)\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\n        valid = getNativeType(value) === expectedType\n      } else {\n        valid = value instanceof typeToCheck.type\n      }\n    }\n  }\n\n  if (!valid) {\n    silent === false && warn(`${namePrefix}value \"${value}\" should be of type \"${expectedType}\"`)\n    return false\n  }\n\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\n    valid = typeToCheck.validator(value)\n    if (!valid && silent === false) warn(`${namePrefix}custom validation failed`)\n    return valid\n  }\n  return valid\n}\n\nlet warn = noop\n\nif (process.env.NODE_ENV !== 'production') {\n  const hasConsole = typeof console !== 'undefined'\n  warn = (msg) => {\n    if (hasConsole) {\n      console.warn(`[VueTypes warn]: ${msg}`)\n    }\n  }\n}\n\nexport { warn }\n","import isPlainObject from 'lodash.isplainobject'\nimport { noop, toType, getType, isFunction, validateType, isInteger, isArray, warn } from './utils'\n\nconst VueTypes = {\n\n  get any() {\n    return toType('any', {\n      type: null\n    })\n  },\n\n  get func() {\n    return toType('function', {\n      type: Function\n    }).def(currentDefaults.func)\n  },\n\n  get bool() {\n    return toType('boolean', {\n      type: Boolean\n    }).def(currentDefaults.bool)\n  },\n\n  get string() {\n    return toType('string', {\n      type: String\n    }).def(currentDefaults.string)\n  },\n\n  get number() {\n    return toType('number', {\n      type: Number\n    }).def(currentDefaults.number)\n  },\n\n  get array() {\n    return toType('array', {\n      type: Array\n    }).def(currentDefaults.array)\n  },\n\n  get object() {\n    return toType('object', {\n      type: Object\n    }).def(currentDefaults.object)\n  },\n\n  get integer() {\n    return toType('integer', {\n      type: Number,\n      validator(value) {\n        return isInteger(value)\n      }\n    }).def(currentDefaults.integer)\n  },\n\n  get symbol() {\n    return toType('symbol', {\n      type: null,\n      validator(value) {\n        return typeof value === 'symbol'\n      }\n    })\n  },\n\n  custom(validatorFn, warnMsg = 'custom validation failed') {\n    if (typeof validatorFn !== 'function') {\n      throw new TypeError('[VueTypes error]: You must provide a function as argument')\n    }\n\n    return toType(validatorFn.name || '<<anonymous function>>', {\n      validator(...args) {\n        const valid = validatorFn(...args)\n        if (!valid) warn(`${this._vueTypes_name} - ${warnMsg}`)\n        return valid\n      }\n    })\n  },\n\n  oneOf(arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n    const msg = `oneOf - value should be one of \"${arr.join('\", \"')}\"`\n    const allowedTypes = arr.reduce((ret, v) => {\n      if (v !== null && v !== undefined) {\n        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor)\n      }\n      return ret\n    }, [])\n\n    return toType('oneOf', {\n      type: allowedTypes.length > 0 ? allowedTypes : null,\n      validator(value) {\n        const valid = arr.indexOf(value) !== -1\n        if (!valid) warn(msg)\n        return valid\n      }\n    })\n  },\n\n  instanceOf(instanceConstructor) {\n    return toType('instanceOf', {\n      type: instanceConstructor\n    })\n  },\n\n  oneOfType(arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n\n    let hasCustomValidators = false\n\n    const nativeChecks = arr.reduce((ret, type, i) => {\n      if (isPlainObject(type)) {\n        if (type._vueTypes_name === 'oneOf') {\n          return ret.concat(type.type || [])\n        }\n        if (type.type && !isFunction(type.validator)) {\n          if (isArray(type.type)) return ret.concat(type.type)\n          ret.push(type.type)\n        } else if (isFunction(type.validator)) {\n          hasCustomValidators = true\n        }\n        return ret\n      }\n      ret.push(type)\n      return ret\n    }, [])\n\n    if (!hasCustomValidators) {\n      // we got just native objects (ie: Array, Object)\n      // delegate to Vue native prop check\n      return toType('oneOfType', {\n        type: nativeChecks\n      })\n    }\n\n    const typesStr = arr.map((type) => {\n      if (type && isArray(type.type)) {\n        return type.type.map(getType)\n      }\n      return getType(type)\n    }).reduce((ret, type) => ret.concat(isArray(type) ? type : [type]), []).join('\", \"')\n\n    return this.custom(function oneOfType(value) {\n      const valid = arr.some((type) => {\n        if (type._vueTypes_name === 'oneOf') {\n          return type.type ? validateType(type.type, value, true) : true\n        }\n        return validateType(type, value, true)\n      })\n      if (!valid) warn(`oneOfType - value type should be one of \"${typesStr}\"`)\n      return valid\n    })\n  },\n\n  arrayOf(type) {\n    return toType('arrayOf', {\n      type: Array,\n      validator(values) {\n        const valid = values.every((value) => validateType(type, value))\n        if (!valid) warn(`arrayOf - value must be an array of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  objectOf(type) {\n    return toType('objectOf', {\n      type: Object,\n      validator(obj) {\n        const valid = Object.keys(obj).every((key) => validateType(type, obj[key]))\n        if (!valid) warn(`objectOf - value must be an object of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  shape(obj) {\n    const keys = Object.keys(obj)\n    const requiredKeys = keys.filter((key) => obj[key] && obj[key].required === true)\n\n    const type = toType('shape', {\n      type: Object,\n      validator(value) {\n        if (!isPlainObject(value)) {\n          return false\n        }\n        const valueKeys = Object.keys(value)\n\n        // check for required keys (if any)\n        if (requiredKeys.length > 0 && requiredKeys.some((req) => valueKeys.indexOf(req) === -1)) {\n          warn(`shape - at least one of required properties \"${requiredKeys.join('\", \"')}\" is not present`)\n          return false\n        }\n\n        return valueKeys.every((key) => {\n          if (keys.indexOf(key) === -1) {\n            if (this._vueTypes_isLoose === true) return true\n            warn(`shape - object is missing \"${key}\" property`)\n            return false\n          }\n          const type = obj[key]\n          return validateType(type, value[key])\n        })\n      }\n    })\n\n    Object.defineProperty(type, '_vueTypes_isLoose', {\n      enumerable: false,\n      writable: true,\n      value: false\n    })\n\n    Object.defineProperty(type, 'loose', {\n      get() {\n        this._vueTypes_isLoose = true\n        return this\n      },\n      enumerable: false\n    })\n\n    return type\n  }\n\n}\n\nconst typeDefaults = () => ({\n  func: noop,\n  bool: true,\n  string: '',\n  number: 0,\n  array: () => [],\n  object: () => ({}),\n  integer: 0\n})\n\nlet currentDefaults = typeDefaults()\n\nObject.defineProperty(VueTypes, 'sensibleDefaults', {\n  enumerable: false,\n  set(value) {\n    if (value === false) {\n      currentDefaults = {}\n    } else if (value === true) {\n      currentDefaults = typeDefaults()\n    } else if (isPlainObject(value)) {\n      currentDefaults = value\n    }\n  },\n  get() {\n    return currentDefaults\n  }\n})\n\nVueTypes.utils = {\n  validate(value, type) {\n    return validateType(type, value, true)\n  },\n  toType\n}\n\nexport default VueTypes\n"],"names":["objectTag","func","transform","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","objectToString","getPrototype","getPrototypeOf","arg","value","isObjectLike","result","e","isHostObject","proto","Ctor","constructor","ObjProto","hasOwn","FN_MATCH_REGEXP","getType","fn","type","undefined","match","noop","isInteger","Number","isFinite","Math","floor","isArray","Array","isFunction","toType","name","obj","defineProperty","required","this","def","default","validateType","isPlainObject","_vueTypes_name","validator","bind","typeToCheck","valid","expectedType","some","map","join","getNativeType","VueTypes","currentDefaults","Boolean","bool","String","string","number","array","object","integer","validatorFn","TypeError","arr","allowedTypes","reduce","ret","v","indexOf","push","length","instanceConstructor","hasCustomValidators","nativeChecks","i","concat","custom","values","every","keys","key","requiredKeys","filter","valueKeys","req","_this","_vueTypes_isLoose","typeDefaults","utils"],"mappings":"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"}