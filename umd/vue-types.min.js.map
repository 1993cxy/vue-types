<<<<<<< HEAD
{"version":3,"file":"vue-types.min.js","sources":["../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isPlainObject.js","../src/utils.js","../src/index.js"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","import isPlainObject from 'lodash/isPlainObject'\nimport Vue from 'vue'\n\nconst ObjProto = Object.prototype\nconst toString = ObjProto.toString\nexport const hasOwn = ObjProto.hasOwnProperty\n\nconst FN_MATCH_REGEXP = /^\\s*function (\\w+)/\n\n// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L177\nexport const getType = (fn) => {\n  const type = (fn !== null && fn !== undefined) ? (fn.type ? fn.type : fn) : null\n  const match = type && type.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\nexport const getNativeType = (value) => {\n  if (value === null || value === undefined) return null\n  const match = value.constructor.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\n/**\n * No-op function\n */\nexport const noop = () => {}\n\n/**\n * Checks for a own property in an object\n *\n * @param {object} obj - Object\n * @param {string} prop - Property to check\n */\nexport const has = (obj, prop) => hasOwn.call(obj, prop)\n\n/**\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @param {*} value - The value to be tested for being an integer.\n * @returns {boolean}\n */\nexport const isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n}\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to be tested for being an array.\n * @returns {boolean}\n */\nexport const isArray = Array.isArray || function (value) {\n  return toString.call(value) === '[object Array]'\n}\n\n/**\n * Checks if a value is a function\n *\n * @param {any} value - Value to check\n * @returns {boolean}\n */\nexport const isFunction = (value) => toString.call(value) === '[object Function]'\n\n/**\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\n *\n * @param {object} type - Object to enhance\n */\nexport const withDefault = function (type) {\n  Object.defineProperty(type, 'def', {\n    value (def) {\n      if (def === undefined && !this.default) {\n        return this\n      }\n      if (!isFunction(def) && !validateType(this, def)) {\n        warn(`${this._vueTypes_name} - invalid default value: \"${def}\"`, def)\n        return this\n      }\n      this.default = (isArray(def) || isPlainObject(def)) ? function () {\n        return def\n      } : def\n      return this\n    },\n    enumerable: false,\n    writable: false\n  })\n}\n\n/**\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\n *\n * @param {object} type - Object to enhance\n */\nexport const withRequired = function (type) {\n  Object.defineProperty(type, 'isRequired', {\n    get () {\n      this.required = true\n      return this\n    },\n    enumerable: false\n  })\n}\n\n/**\n * Adds `isRequired` and `def` modifiers to an object\n *\n * @param {string} name - Type internal name\n * @param {object} obj - Object to enhance\n * @returns {object}\n */\nexport const toType = (name, obj) => {\n  Object.defineProperty(obj, '_vueTypes_name', {\n    enumerable: false,\n    writable: false,\n    value: name\n  })\n  withRequired(obj)\n  withDefault(obj)\n\n  if (isFunction(obj.validator)) {\n    obj.validator = obj.validator.bind(obj)\n  }\n  return obj\n}\n\n/**\n * Validates a given value against a prop type object\n *\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\n * @param {*} value - Value to check\n * @param {boolean} silent - Silence warnings\n * @returns {boolean}\n */\nexport const validateType = (type, value, silent = false) => {\n  let typeToCheck = type\n  let valid = true\n  let expectedType\n  if (!isPlainObject(type)) {\n    typeToCheck = { type }\n  }\n  const namePrefix = typeToCheck._vueTypes_name ? (typeToCheck._vueTypes_name + ' - ') : ''\n\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\n    if (isArray(typeToCheck.type)) {\n      valid = typeToCheck.type.some((type) => validateType(type, value, true))\n      expectedType = typeToCheck.type.map((type) => getType(type)).join(' or ')\n    } else {\n      expectedType = getType(typeToCheck)\n\n      if (expectedType === 'Array') {\n        valid = isArray(value)\n      } else if (expectedType === 'Object') {\n        valid = isPlainObject(value)\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\n        valid = getNativeType(value) === expectedType\n      } else {\n        valid = value instanceof typeToCheck.type\n      }\n    }\n  }\n\n  if (!valid) {\n    silent === false && warn(`${namePrefix}value \"${value}\" should be of type \"${expectedType}\"`)\n    return false\n  }\n\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\n    // swallow warn\n    let oldWarn\n    if (silent) {\n      oldWarn = warn\n      warn = noop\n    }\n\n    valid = typeToCheck.validator(value)\n    oldWarn && (warn = oldWarn)\n\n    if (!valid && silent === false) warn(`${namePrefix}custom validation failed`)\n    return valid\n  }\n  return valid\n}\n\nlet warn = noop\n\nif (process.env.NODE_ENV !== 'production') {\n  const hasConsole = typeof console !== 'undefined'\n  warn = hasConsole ? (msg) => {\n    Vue.config.silent === false && console.warn(`[VueTypes warn]: ${msg}`)\n  } : noop\n}\n\nexport { warn }\n","import isPlainObject from 'lodash/isPlainObject'\nimport { noop, toType, getType, isFunction, validateType, isInteger, isArray, warn } from './utils'\n\nconst VueTypes = {\n\n  get any () {\n    return toType('any', {\n      type: null\n    })\n  },\n\n  get func () {\n    return toType('function', {\n      type: Function\n    }).def(currentDefaults.func)\n  },\n\n  get bool () {\n    return toType('boolean', {\n      type: Boolean\n    }).def(currentDefaults.bool)\n  },\n\n  get string () {\n    return toType('string', {\n      type: String\n    }).def(currentDefaults.string)\n  },\n\n  get number () {\n    return toType('number', {\n      type: Number\n    }).def(currentDefaults.number)\n  },\n\n  get array () {\n    return toType('array', {\n      type: Array\n    }).def(currentDefaults.array)\n  },\n\n  get object () {\n    return toType('object', {\n      type: Object\n    }).def(currentDefaults.object)\n  },\n\n  get integer () {\n    return toType('integer', {\n      type: Number,\n      validator (value) {\n        return isInteger(value)\n      }\n    }).def(currentDefaults.integer)\n  },\n\n  get symbol () {\n    return toType('symbol', {\n      type: null,\n      validator (value) {\n        return typeof value === 'symbol'\n      }\n    })\n  },\n\n  custom (validatorFn, warnMsg = 'custom validation failed') {\n    if (typeof validatorFn !== 'function') {\n      throw new TypeError('[VueTypes error]: You must provide a function as argument')\n    }\n\n    return toType(validatorFn.name || '<<anonymous function>>', {\n      validator (value) {\n        const valid = validatorFn(value)\n        if (!valid) warn(`${this._vueTypes_name} - ${warnMsg}`)\n        return valid\n      }\n    })\n  },\n\n  oneOf (arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n    const msg = `oneOf - value should be one of \"${arr.join('\", \"')}\"`\n    const allowedTypes = arr.reduce((ret, v) => {\n      if (v !== null && v !== undefined) {\n        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor)\n      }\n      return ret\n    }, [])\n\n    return toType('oneOf', {\n      type: allowedTypes.length > 0 ? allowedTypes : null,\n      validator (value) {\n        const valid = arr.indexOf(value) !== -1\n        if (!valid) warn(msg)\n        return valid\n      }\n    })\n  },\n\n  instanceOf (instanceConstructor) {\n    return toType('instanceOf', {\n      type: instanceConstructor\n    })\n  },\n\n  oneOfType (arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n\n    let hasCustomValidators = false\n\n    const nativeChecks = arr.reduce((ret, type, i) => {\n      if (isPlainObject(type)) {\n        if (type._vueTypes_name === 'oneOf') {\n          return ret.concat(type.type || [])\n        }\n        if (type.type && !isFunction(type.validator)) {\n          if (isArray(type.type)) return ret.concat(type.type)\n          ret.push(type.type)\n        } else if (isFunction(type.validator)) {\n          hasCustomValidators = true\n        }\n        return ret\n      }\n      ret.push(type)\n      return ret\n    }, [])\n\n    if (!hasCustomValidators) {\n      // we got just native objects (ie: Array, Object)\n      // delegate to Vue native prop check\n      return toType('oneOfType', {\n        type: nativeChecks\n      })\n    }\n\n    const typesStr = arr.map((type) => {\n      if (type && isArray(type.type)) {\n        return type.type.map(getType)\n      }\n      return getType(type)\n    }).reduce((ret, type) => ret.concat(isArray(type) ? type : [type]), []).join('\", \"')\n\n    return this.custom(function oneOfType (value) {\n      const valid = arr.some((type) => {\n        if (type._vueTypes_name === 'oneOf') {\n          return type.type ? validateType(type.type, value, true) : true\n        }\n        return validateType(type, value, true)\n      })\n      if (!valid) warn(`oneOfType - value type should be one of \"${typesStr}\"`)\n      return valid\n    })\n  },\n\n  arrayOf (type) {\n    return toType('arrayOf', {\n      type: Array,\n      validator (values) {\n        const valid = values.every((value) => validateType(type, value))\n        if (!valid) warn(`arrayOf - value must be an array of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  objectOf (type) {\n    return toType('objectOf', {\n      type: Object,\n      validator (obj) {\n        const valid = Object.keys(obj).every((key) => validateType(type, obj[key]))\n        if (!valid) warn(`objectOf - value must be an object of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  shape (obj) {\n    const keys = Object.keys(obj)\n    const requiredKeys = keys.filter((key) => obj[key] && obj[key].required === true)\n\n    const type = toType('shape', {\n      type: Object,\n      validator (value) {\n        if (!isPlainObject(value)) {\n          return false\n        }\n        const valueKeys = Object.keys(value)\n\n        // check for required keys (if any)\n        if (requiredKeys.length > 0 && requiredKeys.some((req) => valueKeys.indexOf(req) === -1)) {\n          warn(`shape - at least one of required properties \"${requiredKeys.join('\", \"')}\" is not present`)\n          return false\n        }\n\n        return valueKeys.every((key) => {\n          if (keys.indexOf(key) === -1) {\n            if (this._vueTypes_isLoose === true) return true\n            warn(`shape - object is missing \"${key}\" property`)\n            return false\n          }\n          const type = obj[key]\n          return validateType(type, value[key])\n        })\n      }\n    })\n\n    Object.defineProperty(type, '_vueTypes_isLoose', {\n      enumerable: false,\n      writable: true,\n      value: false\n    })\n\n    Object.defineProperty(type, 'loose', {\n      get () {\n        this._vueTypes_isLoose = true\n        return this\n      },\n      enumerable: false\n    })\n\n    return type\n  }\n\n}\n\nconst typeDefaults = () => ({\n  func: noop,\n  bool: true,\n  string: '',\n  number: 0,\n  array: () => [],\n  object: () => ({}),\n  integer: 0\n})\n\nlet currentDefaults = typeDefaults()\n\nObject.defineProperty(VueTypes, 'sensibleDefaults', {\n  enumerable: false,\n  set (value) {\n    if (value === false) {\n      currentDefaults = {}\n    } else if (value === true) {\n      currentDefaults = typeDefaults()\n    } else if (isPlainObject(value)) {\n      currentDefaults = value\n    }\n  },\n  get () {\n    return currentDefaults\n  }\n})\n\nVueTypes.utils = {\n  validate (value, type) {\n    return validateType(type, value, true)\n  },\n  toType\n}\n\nexport default VueTypes\n"],"names":["global","Object","freeSelf","self","freeGlobal","Function","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","value","isOwn","call","tag","e","result","getRawTag","objectToString","func","transform","arg","overArg","getPrototypeOf","funcProto","funcToString","objectCtorString","isObjectLike","baseGetTag","proto","getPrototype","Ctor","constructor","ObjProto","hasOwn","FN_MATCH_REGEXP","getType","fn","type","match","noop","isInteger","Number","isFinite","Math","floor","isArray","Array","isFunction","toType","name","obj","defineProperty","enumerable","writable","get","required","this","def","default","validateType","isPlainObject","warn","_vueTypes_name","validator","bind","silent","expectedType","typeToCheck","valid","oldWarn","namePrefix","some","map","join","getNativeType","VueTypes","currentDefaults","Boolean","bool","String","string","number","array","object","integer","custom","validatorFn","warnMsg","TypeError","oneOf","arr","msg","allowedTypes","reduce","ret","v","indexOf","push","length","instanceOf","instanceConstructor","oneOfType","hasCustomValidators","nativeChecks","i","concat","typesStr","arrayOf","values","every","objectOf","keys","key","shape","requiredKeys","filter","valueKeys","req","_this","_vueTypes_isLoose","typeDefaults","set","utils","validate"],"mappings":"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"}
=======
{"version":3,"file":"vue-types.min.js","sources":["../node_modules/lodash.isplainobject/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","import isPlainObject from 'lodash.isplainobject'\nimport Vue from 'vue'\n\nconst ObjProto = Object.prototype\nconst toString = ObjProto.toString\nexport const hasOwn = ObjProto.hasOwnProperty\n\nconst FN_MATCH_REGEXP = /^\\s*function (\\w+)/\n\n// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L177\nexport const getType = (fn) => {\n  const type = (fn !== null && fn !== undefined) ? (fn.type ? fn.type : fn) : null\n  const match = type && type.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\nexport const getNativeType = (value) => {\n  if (value === null || value === undefined) return null\n  const match = value.constructor.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\n/**\n * No-op function\n */\nexport const noop = () => {}\n\n/**\n * Checks for a own property in an object\n *\n * @param {object} obj - Object\n * @param {string} prop - Property to check\n */\nexport const has = (obj, prop) => hasOwn.call(obj, prop)\n\n/**\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @param {*} value - The value to be tested for being an integer.\n * @returns {boolean}\n */\nexport const isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n}\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to be tested for being an array.\n * @returns {boolean}\n */\nexport const isArray = Array.isArray || function (value) {\n  return toString.call(value) === '[object Array]'\n}\n\n/**\n * Checks if a value is a function\n *\n * @param {any} value - Value to check\n * @returns {boolean}\n */\nexport const isFunction = (value) => toString.call(value) === '[object Function]'\n\n/**\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\n *\n * @param {object} type - Object to enhance\n */\nexport const withDefault = function (type) {\n  Object.defineProperty(type, 'def', {\n    value (def) {\n      if (def === undefined && !this.default) {\n        return this\n      }\n      if (!isFunction(def) && !validateType(this, def)) {\n        warn(`${this._vueTypes_name} - invalid default value: \"${def}\"`, def)\n        return this\n      }\n      if (isArray(def)) {\n        this.default = () => [...def]\n      } else if (isPlainObject(def)) {\n        this.default = () => Object.assign({}, def)\n      } else {\n        this.default = def\n      }\n      return this\n    },\n    enumerable: false,\n    writable: false\n  })\n}\n\n/**\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\n *\n * @param {object} type - Object to enhance\n */\nexport const withRequired = function (type) {\n  Object.defineProperty(type, 'isRequired', {\n    get () {\n      this.required = true\n      return this\n    },\n    enumerable: false\n  })\n}\n\n/**\n * Adds `isRequired` and `def` modifiers to an object\n *\n * @param {string} name - Type internal name\n * @param {object} obj - Object to enhance\n * @returns {object}\n */\nexport const toType = (name, obj) => {\n  Object.defineProperty(obj, '_vueTypes_name', {\n    enumerable: false,\n    writable: false,\n    value: name\n  })\n  withRequired(obj)\n  withDefault(obj)\n\n  if (isFunction(obj.validator)) {\n    obj.validator = obj.validator.bind(obj)\n  }\n  return obj\n}\n\n/**\n * Validates a given value against a prop type object\n *\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\n * @param {*} value - Value to check\n * @param {boolean} silent - Silence warnings\n * @returns {boolean}\n */\nexport const validateType = (type, value, silent = false) => {\n  let typeToCheck = type\n  let valid = true\n  let expectedType\n  if (!isPlainObject(type)) {\n    typeToCheck = { type }\n  }\n  const namePrefix = typeToCheck._vueTypes_name ? (typeToCheck._vueTypes_name + ' - ') : ''\n\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\n    if (isArray(typeToCheck.type)) {\n      valid = typeToCheck.type.some((type) => validateType(type, value, true))\n      expectedType = typeToCheck.type.map((type) => getType(type)).join(' or ')\n    } else {\n      expectedType = getType(typeToCheck)\n\n      if (expectedType === 'Array') {\n        valid = isArray(value)\n      } else if (expectedType === 'Object') {\n        valid = isPlainObject(value)\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\n        valid = getNativeType(value) === expectedType\n      } else {\n        valid = value instanceof typeToCheck.type\n      }\n    }\n  }\n\n  if (!valid) {\n    silent === false && warn(`${namePrefix}value \"${value}\" should be of type \"${expectedType}\"`)\n    return false\n  }\n\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\n    // swallow warn\n    let oldWarn\n    if (silent) {\n      oldWarn = warn\n      warn = noop\n    }\n\n    valid = typeToCheck.validator(value)\n    oldWarn && (warn = oldWarn)\n\n    if (!valid && silent === false) warn(`${namePrefix}custom validation failed`)\n    return valid\n  }\n  return valid\n}\n\nlet warn = noop\n\nif (process.env.NODE_ENV !== 'production') {\n  const hasConsole = typeof console !== 'undefined'\n  warn = hasConsole ? (msg) => {\n    Vue.config.silent === false && console.warn(`[VueTypes warn]: ${msg}`)\n  } : noop\n}\n\nexport { warn }\n","import isPlainObject from 'lodash.isplainobject'\nimport { noop, toType, getType, isFunction, validateType, isInteger, isArray, warn } from './utils'\n\nconst VueTypes = {\n\n  get any () {\n    return toType('any', {\n      type: null\n    })\n  },\n\n  get func () {\n    return toType('function', {\n      type: Function\n    }).def(currentDefaults.func)\n  },\n\n  get bool () {\n    return toType('boolean', {\n      type: Boolean\n    }).def(currentDefaults.bool)\n  },\n\n  get string () {\n    return toType('string', {\n      type: String\n    }).def(currentDefaults.string)\n  },\n\n  get number () {\n    return toType('number', {\n      type: Number\n    }).def(currentDefaults.number)\n  },\n\n  get array () {\n    return toType('array', {\n      type: Array\n    }).def(currentDefaults.array)\n  },\n\n  get object () {\n    return toType('object', {\n      type: Object\n    }).def(currentDefaults.object)\n  },\n\n  get integer () {\n    return toType('integer', {\n      type: Number,\n      validator (value) {\n        return isInteger(value)\n      }\n    }).def(currentDefaults.integer)\n  },\n\n  get symbol () {\n    return toType('symbol', {\n      type: null,\n      validator (value) {\n        return typeof value === 'symbol'\n      }\n    })\n  },\n\n  custom (validatorFn, warnMsg = 'custom validation failed') {\n    if (typeof validatorFn !== 'function') {\n      throw new TypeError('[VueTypes error]: You must provide a function as argument')\n    }\n\n    return toType(validatorFn.name || '<<anonymous function>>', {\n      validator (value) {\n        const valid = validatorFn(value)\n        if (!valid) warn(`${this._vueTypes_name} - ${warnMsg}`)\n        return valid\n      }\n    })\n  },\n\n  oneOf (arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n    const msg = `oneOf - value should be one of \"${arr.join('\", \"')}\"`\n    const allowedTypes = arr.reduce((ret, v) => {\n      if (v !== null && v !== undefined) {\n        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor)\n      }\n      return ret\n    }, [])\n\n    return toType('oneOf', {\n      type: allowedTypes.length > 0 ? allowedTypes : null,\n      validator (value) {\n        const valid = arr.indexOf(value) !== -1\n        if (!valid) warn(msg)\n        return valid\n      }\n    })\n  },\n\n  instanceOf (instanceConstructor) {\n    return toType('instanceOf', {\n      type: instanceConstructor\n    })\n  },\n\n  oneOfType (arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n\n    let hasCustomValidators = false\n\n    const nativeChecks = arr.reduce((ret, type, i) => {\n      if (isPlainObject(type)) {\n        if (type._vueTypes_name === 'oneOf') {\n          return ret.concat(type.type || [])\n        }\n        if (type.type && !isFunction(type.validator)) {\n          if (isArray(type.type)) return ret.concat(type.type)\n          ret.push(type.type)\n        } else if (isFunction(type.validator)) {\n          hasCustomValidators = true\n        }\n        return ret\n      }\n      ret.push(type)\n      return ret\n    }, [])\n\n    if (!hasCustomValidators) {\n      // we got just native objects (ie: Array, Object)\n      // delegate to Vue native prop check\n      return toType('oneOfType', {\n        type: nativeChecks\n      })\n    }\n\n    const typesStr = arr.map((type) => {\n      if (type && isArray(type.type)) {\n        return type.type.map(getType)\n      }\n      return getType(type)\n    }).reduce((ret, type) => ret.concat(isArray(type) ? type : [type]), []).join('\", \"')\n\n    return this.custom(function oneOfType (value) {\n      const valid = arr.some((type) => {\n        if (type._vueTypes_name === 'oneOf') {\n          return type.type ? validateType(type.type, value, true) : true\n        }\n        return validateType(type, value, true)\n      })\n      if (!valid) warn(`oneOfType - value type should be one of \"${typesStr}\"`)\n      return valid\n    })\n  },\n\n  arrayOf (type) {\n    return toType('arrayOf', {\n      type: Array,\n      validator (values) {\n        const valid = values.every((value) => validateType(type, value))\n        if (!valid) warn(`arrayOf - value must be an array of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  objectOf (type) {\n    return toType('objectOf', {\n      type: Object,\n      validator (obj) {\n        const valid = Object.keys(obj).every((key) => validateType(type, obj[key]))\n        if (!valid) warn(`objectOf - value must be an object of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  shape (obj) {\n    const keys = Object.keys(obj)\n    const requiredKeys = keys.filter((key) => obj[key] && obj[key].required === true)\n\n    const type = toType('shape', {\n      type: Object,\n      validator (value) {\n        if (!isPlainObject(value)) {\n          return false\n        }\n        const valueKeys = Object.keys(value)\n\n        // check for required keys (if any)\n        if (requiredKeys.length > 0 && requiredKeys.some((req) => valueKeys.indexOf(req) === -1)) {\n          warn(`shape - at least one of required properties \"${requiredKeys.join('\", \"')}\" is not present`)\n          return false\n        }\n\n        return valueKeys.every((key) => {\n          if (keys.indexOf(key) === -1) {\n            if (this._vueTypes_isLoose === true) return true\n            warn(`shape - object is missing \"${key}\" property`)\n            return false\n          }\n          const type = obj[key]\n          return validateType(type, value[key])\n        })\n      }\n    })\n\n    Object.defineProperty(type, '_vueTypes_isLoose', {\n      enumerable: false,\n      writable: true,\n      value: false\n    })\n\n    Object.defineProperty(type, 'loose', {\n      get () {\n        this._vueTypes_isLoose = true\n        return this\n      },\n      enumerable: false\n    })\n\n    return type\n  }\n\n}\n\nconst typeDefaults = () => ({\n  func: noop,\n  bool: true,\n  string: '',\n  number: 0,\n  array: () => [],\n  object: () => ({}),\n  integer: 0\n})\n\nlet currentDefaults = typeDefaults()\n\nObject.defineProperty(VueTypes, 'sensibleDefaults', {\n  enumerable: false,\n  set (value) {\n    if (value === false) {\n      currentDefaults = {}\n    } else if (value === true) {\n      currentDefaults = typeDefaults()\n    } else if (isPlainObject(value)) {\n      currentDefaults = value\n    }\n  },\n  get () {\n    return currentDefaults\n  }\n})\n\nVueTypes.utils = {\n  validate (value, type) {\n    return validateType(type, value, true)\n  },\n  toType\n}\n\nexport default VueTypes\n"],"names":["func","transform","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","objectToString","getPrototype","getPrototypeOf","arg","value","result","e","isHostObject","proto","Ctor","constructor","ObjProto","hasOwn","FN_MATCH_REGEXP","getType","fn","type","match","noop","isInteger","Number","isFinite","Math","floor","isArray","Array","isFunction","toType","name","obj","defineProperty","required","this","def","undefined","default","validateType","isPlainObject","assign","_vueTypes_name","validator","bind","silent","typeToCheck","valid","expectedType","namePrefix","some","map","join","getNativeType","warn","oldWarn","VueTypes","currentDefaults","Boolean","bool","String","string","number","array","object","integer","validatorFn","warnMsg","TypeError","arr","msg","allowedTypes","reduce","ret","v","indexOf","push","length","instanceConstructor","hasCustomValidators","nativeChecks","i","concat","typesStr","custom","values","every","keys","key","requiredKeys","filter","valueKeys","req","_this","_vueTypes_isLoose","typeDefaults","utils"],"mappings":"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"}
>>>>>>> 5769a2c3b502e79499fbd1de6a4c2542b7ea4d7e
